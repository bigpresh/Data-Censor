NAME
    Data::Censor - censor sensitive stuff in a data structure

VERSION
    Version 0.01

SYNOPSIS
        # OO way, letting you specify your own list of sensitive-looking fields, and
        # what they should be replaced by
        my $censor = Data::Censor->new(
            sensitive_fields => [ qw(card_number password) ],
            replacement => '(Sensitive data hidden)',
        );
    
        # Censor the data in-place (changes the data structure, returns the number
        # of keys censored)
        my $censor_count = $censor->censor(\%data);

        # Or clone the original data structure and return it after censoring:
        my $censored_data = $censor->censored_data(\%data);

new (CONSTRUCTOR)
    Accepts the following arguments:

    sensitive_fields
        Either an arrayref of sensitive fields, checked for equality, or a
        regex to test against each key to see if it's considered sensitive.

    replacement
        The string to replace each value with

    replacement_callbacks
        A hashref of key => sub {...}, where each key is a column name to
        match, and the coderef takes the uncensored value and returns the
        censored value, letting you for instance mask a card number but
        leave the last 4 digits visible.

METHODS
  censor
    Given a data structure (hashref), clones it and returns the cloned
    version after censoring potentially sensitive data within.

  censored_data
    Class method for quick censoring with default options - takes a hashref,
    clones it, applies censoring, and returns the resulting cloned hashref.

AUTHOR
    David Precious (BIGPRESH), `<davidp at preshweb.co.uk>'

    This code was originally written for the Dancer project by myself; I've
    pulled it out into a seperate distribution as I was using it for code at
    work.

SUPPORT
    You can find documentation for this module with the perldoc command.

        perldoc Data::Censor

LICENSE AND COPYRIGHT
    Copyright 2014 David Precious.

    This program is free software; you can redistribute it and/or modify it
    under the terms of the the Artistic License (2.0). You may obtain a copy
    of the full license at:

    http://www.perlfoundation.org/artistic_license_2_0

    Any use, modification, and distribution of the Standard or Modified
    Versions is governed by this Artistic License. By using, modifying or
    distributing the Package, you accept this license. Do not use, modify,
    or distribute the Package, if you do not accept this license.

    If your Modified Version has been derived from a Modified Version made
    by someone other than you, you are nevertheless required to ensure that
    your Modified Version complies with the requirements of this license.

    This license does not grant you the right to use any trademark, service
    mark, tradename, or logo of the Copyright Holder.

    This license includes the non-exclusive, worldwide, free-of-charge
    patent license to make, have made, use, offer to sell, sell, import and
    otherwise transfer the Package with respect to any patent claims
    licensable by the Copyright Holder that are necessarily infringed by the
    Package. If you institute patent litigation (including a cross-claim or
    counterclaim) against any party alleging that the Package constitutes
    direct or contributory patent infringement, then this Artistic License
    to you shall terminate on the date that such litigation is filed.

    Disclaimer of Warranty: THE PACKAGE IS PROVIDED BY THE COPYRIGHT HOLDER
    AND CONTRIBUTORS "AS IS' AND WITHOUT ANY EXPRESS OR IMPLIED WARRANTIES.
    THE IMPLIED WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR
    PURPOSE, OR NON-INFRINGEMENT ARE DISCLAIMED TO THE EXTENT PERMITTED BY
    YOUR LOCAL LAW. UNLESS REQUIRED BY LAW, NO COPYRIGHT HOLDER OR
    CONTRIBUTOR WILL BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, OR
    CONSEQUENTIAL DAMAGES ARISING IN ANY WAY OUT OF THE USE OF THE PACKAGE,
    EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

